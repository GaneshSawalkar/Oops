package com.Bridgelab.Felloship.oops;

import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.Iterator;
import java.util.Scanner;

import org.json.simple.JSONArray;
import org.json.simple.JSONObject;

import com.sun.org.apache.xerces.internal.impl.xpath.regex.ParseException;

import jdk.nashorn.internal.parser.JSONParser;

@SuppressWarnings({ "deprecation", "unused" })
public class AddressBook {

	static Scanner sc = new Scanner(System.in);

	public static void newuserinfo() throws IOException {

		System.out.print("enter user firstName: ");
		String firstName = sc.next();
		System.out.print("enter user lastName: ");
		String lastName = sc.next();
		System.out.print("enter user address: ");
		sc.nextLine();
		String address = sc.nextLine();
		System.out.print("enter state , city , zip code : ");
		String state = sc.next();
		String city = sc.next();
		String zipcode = sc.next();
		System.out.print("enter the phone number: ");
		String phone = sc.next();

		Person person = new Person(firstName, lastName, address, state, city, zipcode, phone);
		JSONObject ob = person.toJsonObject();
		// write data into book array..
		writedata(ob);
		System.out.println(ob.toJSONString());
	}

	@SuppressWarnings({ "unchecked" })
	public static void writedata(JSONObject jsonObject) throws IOException {
		JSONParser jsonParser = new JSONParser();
		JSONArray bookArray = null;
		File file = new File("/home/admin1/Desktop/test.json");
		if (!file.exists()) {
			file.createNewFile();
		} else {
			try {
				bookArray = (JSONArray) jsonParser.parse(new FileReader("/home/admin1/Desktop/test.json"));
			} catch (Exception e) {
				System.out.println(e);
			}
		}
		bookArray.add(jsonObject);
		PrintBook(bookArray);

	}

	public static void PrintBook(JSONArray bookArray) {

		try {

			File fi = new File("/home/admin1/Desktop/test.json");
			FileWriter file = new FileWriter(fi);
			file.write(bookArray.toJSONString());
			file.flush();
			file.close();

		} catch (IOException e) {
			e.printStackTrace();
		}

	}

	public static void findPerson(int choice) throws FileNotFoundException, IOException, ParseException {
		JSONParser parser = new JSONParser();
		System.out.println("enter person first name: ");
		String firstname = sc.next();
		System.out.println("enter person last name: ");
		String lastname = sc.next();
		JSONArray bookarray = null;
		// path of book
		bookarray = (JSONArray) parser.parse(new FileReader("/home/admin1/Desktop/test.json"));
		@SuppressWarnings("rawtypes")
		Iterator iterator = bookarray.iterator();
		int i = 0;
		boolean find = false; // for check found or not

		// search data iteratively
		outer: while (iterator.hasNext()) {

			JSONObject jsonObject = (JSONObject) iterator.next();
			if (jsonObject.get("FirstName").equals(firstname) && jsonObject.get("LastName").equals(lastname)) {

				find = true;
				switch (choice) {
				case 2:
					updateuserinfo(jsonObject, bookarray, i);

					break outer;
				case 3:
					deleteuserinfo(bookarray, i);
					break outer;
				default:
				case 4:
					getuserinfo(jsonObject);
					break outer;
				}
			}
			i++;
		}
		if (!find) {
			System.out.println("not found in list..... \nSorry plz try again!");
		}
	}

	@SuppressWarnings({ "unchecked" })
	private static void updateuserinfo(JSONObject jsonObject, JSONArray bookarray, int index) {
		System.out.println("what you want to update: \n" + "1 Name\n" + "2 Address \n" + "3 contact\n");
		int ch = sc.nextInt();
		switch (ch) {
		case 1:
			System.out.println("enter new first name ");
			String newfname = sc.next();

			System.out.println("enter new last name");
			String newlname = sc.next();
			jsonObject.put("FirstName", newfname);
			jsonObject.put("LastName", newlname);
			break;
		case 2:
			System.out.println("enter new address");
			String newaddress = sc.next();
			System.out.println("enter new state");
			String state = sc.next();
			System.out.println("enter new city");
			String city = sc.next();
			System.out.println("enter new zipcode");
			String zipcode = sc.next();
			jsonObject.put("address", newaddress);
			jsonObject.put("state", state);
			jsonObject.put("city", city);
			jsonObject.put("zipcode", zipcode);
			bookarray.remove(index);
			bookarray.add(index, jsonObject);
			break;
		case 3:
			System.out.println("enter new contact number");
			String phone = sc.next();
			jsonObject.put("contact", phone);

		default:
			break;
		}
		bookarray.remove(index);
		bookarray.add(index, jsonObject);
		PrintBook(bookarray);
	}

	private static void getuserinfo(JSONObject jsonObject) {
		System.out.println(jsonObject);
	}

	private static void deleteuserinfo(JSONArray bookarray, int index) {
		bookarray.remove(index);
		PrintBook(bookarray);
	}

	public static void main(String[] args) throws FileNotFoundException, IOException, ParseException {
		int choice;
		do {
			System.out.println("****User Action :*****");
			System.out.println(
					"1: New User\n" + "2: Update User\n" + "3: Delete User\n" + "4: Search User\n" + "5: Exits\n");

			System.out.print("select choice :");
			choice = sc.nextInt();
			switch (choice) {
			case 1:
				newuserinfo();
				break;
			case 2:
				// update user info
				findPerson(choice);
				break;
			case 3:
				// delete user info
				findPerson(choice);
				break;
			case 4:
				// get user info
				findPerson(choice);
				break;
			case 5:
				System.out.println("Thank you.... have nice day!");
				return;

			default:
				break;
			}

		} while (choice != 5);
	}
}
