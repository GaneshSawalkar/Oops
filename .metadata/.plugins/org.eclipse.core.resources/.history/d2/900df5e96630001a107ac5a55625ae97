package com.bridgelabz.felloship.operation;

import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;

import com.bridgelabz.felloship.control.*;
import com.bridgelabz.felloship.model.stockmodel;
import com.fasterxml.jackson.core.JsonGenerationException;
import com.fasterxml.jackson.core.JsonParseException;
import com.fasterxml.jackson.databind.JsonMappingException;

public class StockOperations {
	public static String userpath = "/home/admin1/Desktop/JavaProject/StockAccountManagement/src/com/bridgelabz/felloship/users.json";
	public static String logpath = "/home/admin1/Desktop/JavaProject/StockAccountManagement/src/com/bridgelabz/felloship/log.json";
	public static String spath = "/home/admin1/Desktop/JavaProject/StockAccountManagement/src/com/bridgelabz/felloship/stockinventory.json";
	static List<stockmodel> list = new ArrayList<stockmodel>();
	static Scanner scanner = new Scanner(System.in);

	public static void main(String[] args) throws JsonParseException, JsonMappingException, IOException {
		list = StockControl.readStock(spath);
		// DisplayAll();
		// AddStock();

	}

	public static void AddStock() throws JsonGenerationException, JsonMappingException, IOException {
		List<stockmodel> newlist = new ArrayList<stockmodel>();
		for (stockmodel stockmodel : list) {
			newlist.add(stockmodel);
		}
		stockmodel stockmodel = new stockmodel();
		System.out.println("new entry");
		System.out.println("symbol");
		stockmodel.setCompanysimbol(scanner.next());
		System.out.println("name");
		stockmodel.setCompanyname(scanner.next());
		System.out.println("stock");
		stockmodel.setCompanyavailableshare(scanner.nextInt());
		System.out.println("price");
		stockmodel.setShareprice(scanner.nextInt());
		newlist.add(stockmodel);
		StockControl.writeStock(newlist);
	}

	public static void updatestock() {
		System.out.println("enter symbol");
		String inputsymbol = scanner.next();
		for (stockmodel stockmodel : list) {

			if (stockmodel.companysimbol.equals(inputsymbol)) {
				System.out.println("enter choice");
				int ch = scanner.nextInt();
				switch (ch) {
				case 1:
					System.out.println("update stock");
					stockmodel.setCompanyavailableshare(scanner.nextInt());
					break;
				case 2:
					System.out.println("updatre price");
					stockmodel.setShareprice(scanner.nextInt());
					break;
				default:
					break;
				}
			}
		}
	}

	public static void Displaystock() throws JsonParseException, JsonMappingException, IOException {
		list = StockControl.readStock(spath);
		System.out.println("sym Company Name      shares     price");
		for (stockmodel stockmodel : list) {
			
			System.out.println(stockmodel.companysimbol + " " + stockmodel.companyname + " having "
					+ stockmodel.companyavailableshare + " at " + stockmodel.shareprice*stockmodel.companyavailableshare);
			System.out.println();
		}
	}
}